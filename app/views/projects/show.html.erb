

<ul class="list-unstyled" >

  <li class="media" id = "project" >
  </span>
    <img src="/images/clock.png"  class="mr-3" alt="clock">
    <div class="media-body">
      <h5 class="mt-0 mb-1">Alexa time tracker</h5>
      This Alexa skill allows users to log time spent on their activities and receive summarized reports. 
      I used lambda function as the endpoint for the Alexa skill, it receives commands and sends requests to node.js backend deployed as a docker container on AWS ECS. It queries Mongodb,
      which is deployed as a container as well, using Mongodb native library. The entire infrastructure lives inside of a custom VPC with no public subnets, so the 
      messages never actually leave AWS network, which is a cool security measure. The skill is on Amazon: <a href="https://amzn.to/2kGdup4">amazon</a>. Code can be found: <a href="http://bit.ly/2k9NPES">here</a>.
    </div>
  </li>
  <li class="media" id = "project">
    <img src="/images/grammiegram.png" class="mr-3" alt="grammiegram">
    <div class="media-body">
      <h5 class="mt-0 mb-1">GrammieGram web version</h5>
      Worked in a team of 5 people developing a communication solution for senior citizens of our comminuty. I worked across the stack implementing backend features with django and front-end features with Javascript, HTML and CSS. 
      Integrated Twillio API. This was an invaluable experience of team work and customer relations. For more details, see: <a href="https://grammiegram.com/about">https://grammiegram.com/about</a>
    </div>
  </li>
  <li class="media" id = "project">
    <img src="/images/iosGrammiegram.png" class="mr-3" alt="iosGrammiegram">
    <div class="media-body">
      <h5 class="mt-0 mb-1">iOS Client for GrammieGram</h5>
      As a part of GrammieGram team, I was the lead iOS developer implementing the mobile client for GrammieGram API using Xcode and Swift. Upon completion, the app was deployed on several
      devices in the local nursing home, since it provided a better and more reliable user experience than the web application. Code can be found: <a href="http://bit.ly/2khB4s7">github</a>
    </div>
  </li>
  <li class="media" id = "project">
    <img src="/images/smsjournal.png" class="mr-3" alt="smsjournal">
    <div class="media-body">
        <h5 class="mt-0 mb-1">SMSJournal</h5>
        SMS Journal is a web app intended to make keeping daily journals as easy as possible. It allows users to write journal entries to their document on Google Docs by sending text messages to a specified phone number.
        I worked on implementing Stripe integration as a payment method, Google Auth, as well as AWS infrastructure with EFS, SNS, and deployment with ElasticBeanstalk. 
        For more details, see: <a href="https://smsjournal.xyz">https://smsjournal.xyz</a>
    </div>
  </li>
  <li class="media" id = "project">
    <img src="/images/card.jpg" class="mr-3" alt="card">
    <div class="media-body">
        <h5 class="mt-0 mb-1">Online multiplayer card game durak</h5>
        As a Golang learning excercise, I decided to write my first online multiplayer game. I took advantage of Go concurrency, channels and context to manage users'
        sessions and ensure the real time gameplay of my project. I also implemented a simple frontend with React.js. Deployment is: <a href="http://bit.ly/2meEvAo">onlinegame</a> (use Chrome).
        Code can be found: <a href="https://github.com/abaevbog/onlineDurakWithGolang">here</a>

    </div>
  </li>
  <li class="media" id = "project">
    <img src="/images/create.png" class="mr-3" alt="online shop">
    <div class="media-body">
        <h5 class="mt-0 mb-1">eBay clone</h5>
        In order to learn Flutter, I created a generic clone of eBay (or any other online store) with the main features of any mobile app: user authentication, data storage, gallery of items, as well as the personal account for management. I used Google Firebase as a solution for authentication, datastore and database.
        For code, see: <a href="https://github.com/abaevbog/myItemTracker">github</a> 
    </div>
  </li>
</ul>